// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package org.rooinaction.coursemanager.client.managed.ui;

import com.google.gwt.core.client.GWT;
import com.google.gwt.i18n.client.DateTimeFormat;
import com.google.gwt.i18n.client.NumberFormat;
import com.google.gwt.text.client.DateTimeFormatRenderer;
import com.google.gwt.text.shared.AbstractRenderer;
import com.google.gwt.text.shared.Renderer;
import com.google.gwt.uibinder.client.UiBinder;
import com.google.gwt.uibinder.client.UiField;
import com.google.gwt.user.cellview.client.CellTable;
import com.google.gwt.user.cellview.client.HasKeyboardSelectionPolicy.KeyboardSelectionPolicy;
import com.google.gwt.user.cellview.client.TextColumn;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.HTMLPanel;
import java.util.HashSet;
import java.util.Set;
import org.rooinaction.coursemanager.client.scaffold.place.AbstractProxyListView;
import org.rooinaction.coursemanager.web.gwt.proxies.InstructorProxy;

public abstract class InstructorListView_Roo_Gwt extends AbstractProxyListView<InstructorProxy> {

    @UiField
    CellTable<InstructorProxy> table;

    protected Set<String> paths = new HashSet<String>();

    public void init() {
        paths.add("id");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.Long> renderer = new AbstractRenderer<java.lang.Long>() {

                public String render(java.lang.Long obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getId());
            }
        }, "Id");
        paths.add("fullName");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getFullName());
            }
        }, "Full Name");
        paths.add("firstName");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getFirstName());
            }
        }, "First Name");
        paths.add("middleNameOrInitial");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getMiddleNameOrInitial());
            }
        }, "Middle Name Or Initial");
        paths.add("lastName");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getLastName());
            }
        }, "Last Name");
        paths.add("addressLine1");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getAddressLine1());
            }
        }, "Address Line1");
        paths.add("addressLine2");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getAddressLine2());
            }
        }, "Address Line2");
        paths.add("city");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getCity());
            }
        }, "City");
        paths.add("stateCode");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getStateCode());
            }
        }, "State Code");
        paths.add("postalCode");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getPostalCode());
            }
        }, "Postal Code");
        paths.add("emailAddress");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getEmailAddress());
            }
        }, "Email Address");
        paths.add("version");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getVersion());
            }
        }, "Version");
        paths.add("taxNumber");
        table.addColumn(new TextColumn<InstructorProxy>() {

            Renderer<java.lang.String> renderer = new AbstractRenderer<java.lang.String>() {

                public String render(java.lang.String obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(InstructorProxy object) {
                return renderer.render(object.getTaxNumber());
            }
        }, "Tax Number");
    }
}
