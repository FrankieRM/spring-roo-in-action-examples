// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.rooina.coursemanager.web;

import java.lang.String;
import org.rooina.coursemanager.model.Course;
import org.rooina.coursemanager.model.PeriodicCourse;
import org.rooina.coursemanager.model.SingleEvent;
import org.rooina.coursemanager.model.Student;
import org.rooina.coursemanager.model.Tag;
import org.rooina.coursemanager.model.TrainingProgram;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(new CourseConverter());
        registry.addConverter(new PeriodicCourseConverter());
        registry.addConverter(new SingleEventConverter());
        registry.addConverter(new StudentConverter());
        registry.addConverter(new TagConverter());
        registry.addConverter(new TrainingProgramConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
    static class org.rooina.coursemanager.web.ApplicationConversionServiceFactoryBean.CourseConverter implements Converter<Course, String>  {
        public String convert(Course course) {
            return new StringBuilder().append(course.getName()).append(" ").append(course.getDescription()).append(" ").append(course.getMaxiumumCapacity()).append(" ").append(course.getCreatedDate()).toString();
        }
        
    }
    
    static class org.rooina.coursemanager.web.ApplicationConversionServiceFactoryBean.PeriodicCourseConverter implements Converter<PeriodicCourse, String>  {
        public String convert(PeriodicCourse periodicCourse) {
            return new StringBuilder().append(periodicCourse.getLocation()).append(" ").append(periodicCourse.getStartDate()).append(" ").append(periodicCourse.getEndDate()).toString();
        }
        
    }
    
    static class org.rooina.coursemanager.web.ApplicationConversionServiceFactoryBean.SingleEventConverter implements Converter<SingleEvent, String>  {
        public String convert(SingleEvent singleEvent) {
            return new StringBuilder().append(singleEvent.getLocation()).append(" ").append(singleEvent.getRunDate()).toString();
        }
        
    }
    
    static class org.rooina.coursemanager.web.ApplicationConversionServiceFactoryBean.StudentConverter implements Converter<Student, String>  {
        public String convert(Student student) {
            return new StringBuilder().append(student.getFirstName()).append(" ").append(student.getMiddleNameOrInitial()).append(" ").append(student.getLastName()).append(" ").append(student.getAddressLine1()).toString();
        }
        
    }
    
    static class org.rooina.coursemanager.web.ApplicationConversionServiceFactoryBean.TagConverter implements Converter<Tag, String>  {
        public String convert(Tag tag) {
            return new StringBuilder().append(tag.getTag()).append(" ").append(tag.getDescription()).toString();
        }
        
    }
    
    static class org.rooina.coursemanager.web.ApplicationConversionServiceFactoryBean.TrainingProgramConverter implements Converter<TrainingProgram, String>  {
        public String convert(TrainingProgram trainingProgram) {
            return new StringBuilder().append(trainingProgram.getName()).toString();
        }
        
    }
    
}
