// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.rooina.coursemanager.model;

import java.util.List;
import java.util.Random;
import org.rooina.coursemanager.model.Tag;
import org.springframework.stereotype.Component;

privileged aspect TagDataOnDemand_Roo_DataOnDemand {
    
    declare @type: TagDataOnDemand: @Component;
    
    private Random TagDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Tag> TagDataOnDemand.data;
    
    public Tag TagDataOnDemand.getNewTransientTag(int index) {
        org.rooina.coursemanager.model.Tag obj = new org.rooina.coursemanager.model.Tag();
        setTag(obj, index);
        setDescription(obj, index);
        return obj;
    }
    
    public void TagDataOnDemand.setTag(Tag obj, int index) {
        java.lang.String tag = "tag_" + index;
        if (tag.length() > 25) {
            tag = tag.substring(0, 25);
        }
        obj.setTag(tag);
    }
    
    public void TagDataOnDemand.setDescription(Tag obj, int index) {
        java.lang.String description = "description_" + index;
        if (description.length() > 250) {
            description = description.substring(0, 250);
        }
        obj.setDescription(description);
    }
    
    public Tag TagDataOnDemand.getSpecificTag(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Tag obj = data.get(index);
        return Tag.findTag(obj.getId());
    }
    
    public Tag TagDataOnDemand.getRandomTag() {
        init();
        Tag obj = data.get(rnd.nextInt(data.size()));
        return Tag.findTag(obj.getId());
    }
    
    public boolean TagDataOnDemand.modifyTag(Tag obj) {
        return false;
    }
    
    public void TagDataOnDemand.init() {
        data = org.rooina.coursemanager.model.Tag.findTagEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Tag' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<org.rooina.coursemanager.model.Tag>();
        for (int i = 0; i < 10; i++) {
            org.rooina.coursemanager.model.Tag obj = getNewTransientTag(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
