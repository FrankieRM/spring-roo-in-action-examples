// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package org.rooinaction.coursemanager.client.managed.activity;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.activity.shared.ActivityMapper;
import com.google.gwt.place.shared.Place;
import com.google.gwt.place.shared.PlaceController;
import com.google.inject.Inject;
import org.rooinaction.coursemanager.client.managed.request.ApplicationEntityTypesProcessor;
import org.rooinaction.coursemanager.client.managed.request.ApplicationRequestFactory;
import org.rooinaction.coursemanager.client.managed.ui.desktop.CourseDesktopListView;
import org.rooinaction.coursemanager.client.managed.ui.desktop.InstructorDesktopListView;
import org.rooinaction.coursemanager.client.managed.ui.desktop.OfferingDesktopListView;
import org.rooinaction.coursemanager.client.managed.ui.desktop.RegistrationDesktopListView;
import org.rooinaction.coursemanager.client.managed.ui.desktop.StudentDesktopListView;
import org.rooinaction.coursemanager.client.managed.ui.desktop.TagDesktopListView;
import org.rooinaction.coursemanager.client.managed.ui.desktop.TrainingProgramDesktopListView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.CourseMobileListView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.InstructorMobileListView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.OfferingMobileListView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.RegistrationMobileListView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.StudentMobileListView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.TagMobileListView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.TrainingProgramMobileListView;
import org.rooinaction.coursemanager.client.scaffold.ScaffoldApp;
import org.rooinaction.coursemanager.client.scaffold.place.ProxyListPlace;
import org.rooinaction.coursemanager.web.proxy.CourseProxy;
import org.rooinaction.coursemanager.web.proxy.InstructorProxy;
import org.rooinaction.coursemanager.web.proxy.OfferingProxy;
import org.rooinaction.coursemanager.web.proxy.RegistrationProxy;
import org.rooinaction.coursemanager.web.proxy.StudentProxy;
import org.rooinaction.coursemanager.web.proxy.TagProxy;
import org.rooinaction.coursemanager.web.proxy.TrainingProgramProxy;

public abstract class ApplicationMasterActivities_Roo_Gwt implements ActivityMapper {

    protected ApplicationRequestFactory requests;

    protected PlaceController placeController;

    public Activity getActivity(Place place) {
        if (!(place instanceof ProxyListPlace)) {
            return null;
        }
        ProxyListPlace listPlace = (ProxyListPlace) place;
        return new ApplicationEntityTypesProcessor<Activity>() {

            @Override
            public void handleCourse(CourseProxy isNull) {
                setResult(new CourseListActivity(requests, ScaffoldApp.isMobile() ? CourseMobileListView.instance() : CourseDesktopListView.instance(), placeController));
            }

            @Override
            public void handleInstructor(InstructorProxy isNull) {
                setResult(new InstructorListActivity(requests, ScaffoldApp.isMobile() ? InstructorMobileListView.instance() : InstructorDesktopListView.instance(), placeController));
            }

            @Override
            public void handleOffering(OfferingProxy isNull) {
                setResult(new OfferingListActivity(requests, ScaffoldApp.isMobile() ? OfferingMobileListView.instance() : OfferingDesktopListView.instance(), placeController));
            }

            @Override
            public void handleRegistration(RegistrationProxy isNull) {
                setResult(new RegistrationListActivity(requests, ScaffoldApp.isMobile() ? RegistrationMobileListView.instance() : RegistrationDesktopListView.instance(), placeController));
            }

            @Override
            public void handleStudent(StudentProxy isNull) {
                setResult(new StudentListActivity(requests, ScaffoldApp.isMobile() ? StudentMobileListView.instance() : StudentDesktopListView.instance(), placeController));
            }

            @Override
            public void handleTag(TagProxy isNull) {
                setResult(new TagListActivity(requests, ScaffoldApp.isMobile() ? TagMobileListView.instance() : TagDesktopListView.instance(), placeController));
            }

            @Override
            public void handleTrainingProgram(TrainingProgramProxy isNull) {
                setResult(new TrainingProgramListActivity(requests, ScaffoldApp.isMobile() ? TrainingProgramMobileListView.instance() : TrainingProgramDesktopListView.instance(), placeController));
            }
        }.process(listPlace.getProxyClass());
    }
}
