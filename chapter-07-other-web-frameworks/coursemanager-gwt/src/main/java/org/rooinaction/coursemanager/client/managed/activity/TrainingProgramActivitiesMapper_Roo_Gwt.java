// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package org.rooinaction.coursemanager.client.managed.activity;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.web.bindery.requestfactory.shared.EntityProxyId;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import org.rooinaction.coursemanager.client.managed.request.ApplicationRequestFactory;
import org.rooinaction.coursemanager.client.managed.ui.desktop.TrainingProgramDesktopDetailsView;
import org.rooinaction.coursemanager.client.managed.ui.desktop.TrainingProgramDesktopEditView;
import org.rooinaction.coursemanager.client.managed.ui.desktop.TrainingProgramDesktopListView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.TrainingProgramMobileDetailsView;
import org.rooinaction.coursemanager.client.managed.ui.mobile.TrainingProgramMobileEditView;
import org.rooinaction.coursemanager.client.scaffold.ScaffoldApp;
import org.rooinaction.coursemanager.client.scaffold.place.ProxyPlace;
import org.rooinaction.coursemanager.web.proxy.TrainingProgramProxy;
import org.rooinaction.coursemanager.web.request.TrainingProgramRequest;

public abstract class TrainingProgramActivitiesMapper_Roo_Gwt {

    protected ApplicationRequestFactory factory;

    protected PlaceController placeController;

    protected Activity makeCreateActivity() {
        TrainingProgramDesktopEditView.instance().setCreating(true);
        Activity activity = new TrainingProgramEditActivity(null, factory, ScaffoldApp.isMobile() ? TrainingProgramMobileEditView.instance() : TrainingProgramDesktopEditView.instance(), placeController);
        return new TrainingProgramEditActivityWrapper(factory, ScaffoldApp.isMobile() ? TrainingProgramMobileEditView.instance() : TrainingProgramDesktopEditView.instance(), activity, null);
    }

    @SuppressWarnings("unchecked")
    protected EntityProxyId<TrainingProgramProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<TrainingProgramProxy>) place.getProxyId();
    }

    protected Activity makeEditActivity(ProxyPlace place) {
        TrainingProgramDesktopEditView.instance().setCreating(false);
        EntityProxyId<TrainingProgramProxy> proxyId = coerceId(place);
        Activity activity = new TrainingProgramEditActivity(proxyId, factory, ScaffoldApp.isMobile() ? TrainingProgramMobileEditView.instance() : TrainingProgramDesktopEditView.instance(), placeController);
        return new TrainingProgramEditActivityWrapper(factory, ScaffoldApp.isMobile() ? TrainingProgramMobileEditView.instance() : TrainingProgramDesktopEditView.instance(), activity, proxyId);
    }
}
