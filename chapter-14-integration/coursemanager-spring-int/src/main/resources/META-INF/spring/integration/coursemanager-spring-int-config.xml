<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/integration/jms"
	xmlns:jmx="http://www.springframework.org/schema/integration/jmx"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/integration
			http://www.springframework.org/schema/integration/spring-integration.xsd
			http://www.springframework.org/schema/integration/jms
			http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd
			http://www.springframework.org/schema/integration/jmx
			http://www.springframework.org/schema/integration/jmx/spring-integration-jmx.xsd
			http://www.springframework.org/schema/integration/stream
			http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd">


	<!--  Test Outbound Adapter for Unit Testing  -->
	<channel id="stdinToJmsoutChannel"/>
	<stream:stdin-channel-adapter id="stdin" channel="stdinToJmsoutChannel"/>

	<jms:outbound-channel-adapter 
		id="jmsout" 
		channel="stdinToJmsoutChannel" 
		destination="courseRegistrationRequestQueue"/>


	<!--  Inbound Adapter  -->
	<jms:message-driven-channel-adapter
		id="coursemanager-jms-input-adapter"
		destination="courseRegistrationRequestQueue"
		channel="jmsInToTransformerChannel"/>

	<channel id="jmsInToTransformerChannel"/>

	<!--  Transformer  -->
	<transformer input-channel="jmsInToTransformerChannel" 
		output-channel="transformerToRouterChannel" 
		expression="payload.toUpperCase() + '- [' + T(java.lang.System).currentTimeMillis() + ']'"/>

	<channel id="transformerToRouterChannel"/>

	<recipient-list-router id="coursemanager-router" input-channel="transformerToRouterChannel">
		<recipient channel="testJmsinToPreStdoutChannel" selector-expression="payload.contains('12345')"/>
		<recipient channel="testJmsinToPreWaitListChannel" selector-expression="payload.contains('99999')"/>
		<recipient channel="testJmsinToPreErrorChannel" selector-expression="payload.contains('77777')"/>
	</recipient-list-router>

	<channel id="testJmsinToPreStdoutChannel"/>
	<channel id="testJmsinToPreWaitListChannel"/>
	<channel id="testJmsinToPreErrorChannel"/>

	<transformer input-channel="testJmsinToPreStdoutChannel" 
		output-channel="jmsinToStdoutChannel" 
		expression="'Course Registration Successful. [Payload=' + payload + ']'"/>

	<transformer input-channel="testJmsinToPreWaitListChannel" 
		output-channel="jmsinToWaitListChannel" 
		expression="'Course Registration Request placed on Wait-list. [Payload=' + payload + ']'"/>

	<transformer input-channel="testJmsinToPreErrorChannel" 
		output-channel="jmsinToErrorChannel" 
		expression="'Invalid Course Registration. [Payload=' + payload + ']'"/>

	<channel id="jmsinToStdoutChannel"/>
	<channel id="jmsinToWaitListChannel"/>
	<channel id="jmsinToErrorChannel"/>

	<stream:stdout-channel-adapter id="courseRegSuccess" channel="jmsinToStdoutChannel" append-newline="true"/>
	<stream:stdout-channel-adapter id="courseRegWaitList" channel="jmsinToWaitListChannel" append-newline="true"/>
	<stream:stderr-channel-adapter id="invalidRegistration" channel="jmsinToErrorChannel" append-newline="true"/>

	<!--  Mail Output Channel Adapter  -->
	<!--
		Replace 'userid and 'password' with the real values
		and uncomment the mail:inbound-channel-adapter configuration below
		to enable the last step in the use case, i.e. to notify the customer
		about the course registration result via e-mail.  
	-->
	<!--
	<mail:inbound-channel-adapter id="pop3ShouldDeleteTrue" 
	    store-uri="pop3://[userid]:[password]@pop.gmail.com/INBOX" 
		channel="routerToOutputAdapterChannel" 
		should-delete-messages="true" 
		auto-startup="true" 
		java-mail-properties="javaMailProperties">

		<poller fixed-rate="20000"/>
	</mail:inbound-channel-adapter>

	<util:properties id="javaMailProperties">
		<beans:prop key="mail.pop3.socketFactory.fallback">
            false</beans:prop>
		<beans:prop key="mail.debug">true</beans:prop>
		<beans:prop key="mail.pop3.port">995</beans:prop>
		<beans:prop key="mail.pop3.socketFactory.class">
            javax.net.ssl.SSLSocketFactory</beans:prop>
		<beans:prop key="mail.pop3.socketFactory.port">
            995</beans:prop>
	</util:properties>
	-->

</beans:beans>
